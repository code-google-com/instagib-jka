//Generated by BehavEd

rem ( "Trash compactor for vjun2" );
//(BHVDREM)  sound ( /*@CHANNELS*/ CHAN_ANNOUNCER, "sound/chars/io1/misc/escaping3.mp3" );

affect ( $get( STRING, "SET_PARM1")$, /*@AFFECT_TYPE*/ FLUSH )
{
	waitsignal ( "lower the masher" );

	task ( "trash_down" )
	{
		wait ( 500.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 15500.000 );
	}

	dowait ( "trash_down" );

	task ( "trash_up" )
	{
		wait ( 1000.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 8000.000 );
	}

	dowait ( "trash_up" );
}


affect ( $get( STRING, "SET_PARM2")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "compact_1_forward" )
	{
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 11000.000 );
	}

	wait ( 500.000 );
	do ( "compact_1_forward" );
	wait ( 7000.000 );
	signal ( "lower the masher" );
	wait ( "compact_1_forward" );

	task ( "compact_1_back" )
	{
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 10000.000 );
	}

	rem ( "was 5000, has to be longer so they don't move back before masher crushes you" );
	wait ( 10000.000 );
	dowait ( "compact_1_back" );
}


affect ( $get( STRING, "SET_PARM3")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "compact_2_forward" )
	{
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 11000.000 );
	}

	wait ( 500.000 );
	dowait ( "compact_2_forward" );

	task ( "compact_2_back" )
	{
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 10000.000 );
	}

	rem ( "was 5000, has to be longer so they don't move back before masher crushes you" );
	wait ( 10000.000 );
	dowait ( "compact_2_back" );
}


affect ( $get( STRING, "SET_PARM4")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "compact_3_forward" )
	{
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 11000.000 );
	}

	wait ( 500.000 );
	dowait ( "compact_3_forward" );

	task ( "compact_3_back" )
	{
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 10000.000 );
	}

	rem ( "was 5000, has to be longer so they don't move back before masher crushes you" );
	wait ( 10000.000 );
	dowait ( "compact_3_back" );
}


affect ( $get( STRING, "SET_PARM5")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute1_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute1_open" );

	task ( "chute1_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute1_close" );
}


affect ( $get( STRING, "SET_PARM6")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute2_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute2_open" );

	task ( "chute2_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute2_close" );
}


affect ( $get( STRING, "SET_PARM7")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute3_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute3_open" );

	task ( "chute3_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute3_close" );
}


affect ( $get( STRING, "SET_PARM8")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute4_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute4_open" );

	task ( "chute4_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute4_close" );
}


affect ( $get( STRING, "SET_PARM9")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute5_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute5_open" );

	task ( "chute5_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute5_close" );
}


affect ( $get( STRING, "SET_PARM10")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute6_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute6_open" );

	task ( "chute6_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute6_close" );
}


affect ( $get( STRING, "SET_PARM11")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute7_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute7_open" );

	task ( "chute7_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute7_close" );
}


affect ( $get( STRING, "SET_PARM12")$, /*@AFFECT_TYPE*/ FLUSH )
{

	task ( "chute8_open" )
	{
		wait ( 15000.000 );
		move ( $tag(get( STRING, "SET_PARM1") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute8_open" );

	task ( "chute8_close" )
	{
		wait ( 3500.000 );
		move ( $tag(get( STRING, "SET_PARM2") ,ORIGIN)$, $<0 0 0>$, 4000.000 );
	}

	dowait ( "chute8_close" );
}

wait ( 250.000 );
rem ( "shake cam just as sound should be starting up" );

affect ( "player", /*@AFFECT_TYPE*/ INSERT )
{

	if ( $get( STRING, "SET_LOCATION")$, $=$, $"trashcompactor"$ )
	{
		rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "SHAKE",  "2.000, 1000" );
	}

}

