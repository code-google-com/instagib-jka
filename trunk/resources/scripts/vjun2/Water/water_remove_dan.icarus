//Generated by BehavEd

rem ( "This drains the water in the water room." );
sound ( /*@CHANNELS*/ CHAN_AUTO, "sound/movers/switches/switch2.mp3" );
rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "ENABLE",  "1" );
rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "FADE",  "< 0.000 0.000 0.000 >, 0.000, < 0.000 0.000 0.000 >, 1.000, 0" );
rem ( "move playter to a spot that won't interfere with mini-cinematic" );

affect ( "player", /*@AFFECT_TYPE*/ FLUSH )
{
	set ( /*@SET_TYPES*/ "SET_ORIGIN", $tag( "player_safespot", ORIGIN)$ );
}

rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "MOVE",  "$tag( water_cam1, ORIGIN)$, 0" );
rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "PAN",  "$tag( water_cam1, ANGLES)$, < 0.000 0.000 0.000 >, 0" );
rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "FADE",  "< 0.000 0.000 0.000 >, 1.000, < 0.000 0.000 0.000 >, 0.000, 750" );
wait ( 500.000 );
rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "PAN",  "$tag( water_cam3, ANGLES)$, < 0.000 0.000 0.000 >, 3000" );
rem ( "water draining sound" );
wait ( 250.000 );
sound ( /*@CHANNELS*/ CHAN_AUTO, "sound/effects/water_drain.mp3" );

affect ( "Waterbrush", /*@AFFECT_TYPE*/ FLUSH )
{
	rem ( "we make it a huge move time so it drains slowly" );
	move ( $tag( "Ref_waterdown", ORIGIN)$, $9000$ );
	rem ( "but after only a few seconds the water will be under the floor" );
	wait ( 2000.000 );
	rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "PAN",  "$tag( water_cam2, ANGLES)$, < 0.000 0.000 0.000 >, 3500" );
	wait ( 500.000 );
	rem ( "have kyle drop the pipe" );
	remove ( "pool_speakers" );
	remove ( "pool_speakersb" );

	affect ( "script_thePipe", /*@AFFECT_TYPE*/ FLUSH )
	{
		rem ( "turn off sparks" );
		use ( "fallenspark" );
		rem ( "let beam fall" );
		set ( /*@SET_TYPES*/ "SET_STARTFRAME", 87 );
		set ( /*@SET_TYPES*/ "SET_ENDFRAME", 110 );
		sound ( /*@CHANNELS*/ CHAN_AUTO, "sound/movers/objects/beamhit.mp3" );
	}

	use ( "pipeClipModelHurt" );
	//(BHVDREM)  use ( "activateKylePathTrigger" );

	affect ( "npc_tempKyle", /*@AFFECT_TYPE*/ FLUSH )
	{
		//(BHVDREM)  set ( /*@SET_TYPES*/ "SET_NO_FORCE", /*@BOOL_TYPES*/ "true" );
		set ( /*@SET_TYPES*/ "SET_RUNNING", /*@BOOL_TYPES*/ "true" );
		set ( /*@SET_TYPES*/ "SET_ANIM_HOLDTIME_BOTH", 0 );
		set ( /*@SET_TYPES*/ "SET_BEHAVIOR_STATE", /*@BSTATE_STRINGS*/ "BS_CINEMATIC" );
		print ( "Well look at that.  Guess we made our own path." );
		sound ( /*@CHANNELS*/ CHAN_VOICE, "sound/chars/kyle/18kyk017.mp3" );

		task ( "gotonav1" )
		{
			set ( /*@SET_TYPES*/ "SET_NAVGOAL", "nav_waterroomkyle1" );
		}

		dowait ( "gotonav1" );
		rem ( "turn hanging pipe clip off" );
		use ( "prepipeClipModel" );
		rem ( "turn fallen pipe clip on" );
		use ( "pipeClipModel" );
		wait ( 500.000 );
		set ( /*@SET_TYPES*/ "SET_BEHAVIOR_STATE", /*@BSTATE_STRINGS*/ "BS_JUMP" );

		task ( "gotonav4" )
		{
			set ( /*@SET_TYPES*/ "SET_NAVGOAL", "nav_waterroomkyle4" );
		}

		dowait ( "gotonav4" );
		set ( /*@SET_TYPES*/ "SET_BEHAVIOR_STATE", /*@BSTATE_STRINGS*/ "BS_CINEMATIC" );
		rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "FADE",  "< 0.000 0.000 0.000 >, 0.000, < 0.000 0.000 0.000 >, 1.000, 750" );
		wait ( 1000.000 );
		rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "FADE",  "< 0.000 0.000 0.000 >, 1.000, < 0.000 0.000 0.000 >, 0.000, 0" );
		rem ( "EDITED: former CAMERA_COMMANDS cmd follows:" );
set ( /*@SET_TYPES\*/ "DISABLE",  "1" );

		task ( "gotonav5" )
		{
			set ( /*@SET_TYPES*/ "SET_NAVGOAL", "nav_waterroomkyle5" );
		}

		do ( "gotonav5" );
		wait ( 500.000 );
		wait ( "gotonav5" );
		set ( /*@SET_TYPES*/ "SET_WEAPON", /*@WEAPON_NAMES*/ "WP_SABER" );
		rem ( "move kyle to a total safe spot" );
		set ( /*@SET_TYPES*/ "SET_ORIGIN", $tag( "kylePostDrainPos1", ORIGIN)$ );
		//(BHVDREM)  set ( /*@SET_TYPES*/ "SET_LOOK_TARGET", "player" );
		//(BHVDREM)  set ( /*@SET_TYPES*/ "SET_WATCHTARGET", "player" );
		//(BHVDREM)  set ( /*@SET_TYPES*/ "SET_ANIM_BOTH", /*@ANIM_NAMES*/ "BOTH_STAND1" );
		//(BHVDREM)  set ( /*@SET_TYPES*/ "SET_ANIM_HOLDTIME_BOTH", -1 );
		set ( /*@SET_TYPES*/ "SET_SOLID", /*@BOOL_TYPES*/ "true" );
		use ( "kyle_block" );
		//(BHVDREM)  waitsignal ( "kyleMadeOurOwnPath" );
		//(BHVDREM)  waitsignal ( "kyle follow player again" );
		set ( /*@SET_TYPES*/ "SET_LEADER", "player" );
		set ( /*@SET_TYPES*/ "SET_BEHAVIOR_STATE", /*@BSTATE_STRINGS*/ "BS_FOLLOW_LEADER" );
		set ( /*@SET_TYPES*/ "SET_ANIM_HOLDTIME_BOTH", 0 );
	}

}

